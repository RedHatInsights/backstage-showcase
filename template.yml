---
apiVersion: v1
kind: Template
metadata:
  name: backstage
parameters:
- name: IMAGE
  value: quay.io/janus-idp/redhat-backstage-build
- name: IMAGE_TAG
  value: latest
- name: DB_SECRET_NAME
  value: backstage-db
- name: APP_CONFIG_VALUES
  value: backstage-app-config
objects:
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    name: backstage
- apiVersion: v1
  kind: Service
  metadata:
    name: backstage
  labels:
    app.kubernetes.io/name: backstage
  spec:
    type: ClusterIP
    ports:
      - name: http-backend
        port: 7007
        targetPort: backend
        protocol: TCP
    selector:
      app.kubernetes.io/name: backstage
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: backstage
    labels:
      app.kubernetes.io/name: backstage
  spec:
    replicas: 1
    selector:
      matchLabels:
        app.kubernetes.io/name: backstage
    template:
      metadata:
        labels:
          app.kubernetes.io/name: backstage
      spec:
        serviceAccountName: backstage
        volumes:
        - name: app-config
          secret:
            secretName: backstage-app-config
        containers:
        - name: backend
          image: ${IMAGE}:${IMAGE_TAG}
          imagePullPolicy: "Always"
          command:
          - node
          - packages/backend
          args:
          - --config
          - /app/app-config.yaml
          envFrom:
            - configMapRef:
                name: ${APP_CONFIG_VALUES}
                optional: true # TODO: Change this?
          env:
          - name: POSTGRES_HOST
            valueFrom:
              secretKeyRef:
                name: ${DB_SECRET_NAME}
                key: db.host
          - name: POSTGRES_DB
            valueFrom:
              secretKeyRef:
                name: ${DB_SECRET_NAME}
                key: db.name
          - name: POSTGRES_PORT
            valueFrom:
              secretKeyRef:
                name: ${DB_SECRET_NAME}
                key: db.port
          - name: POSTGRES_USER
            valueFrom:
              secretKeyRef:
                name: ${DB_SECRET_NAME}
                key: db.user
          - name: POSTGRES_PASSWORD
            valueFrom:
              secretKeyRef:
                name: ${DB_SECRET_NAME}
                key: db.password
          ports:
          - name: backend
            containerPort: 7007
            protocol: TCP
          volumeMounts:
          - name: app-config
            mountPath: /app/app-config.yaml
            subPath: app-config.yaml
- apiVersion: v1
  kind: Configmap
  metadata:
    name: backstage-app-config
  labels:
    app.kubernetes.io/name: backstage
  data:
    BACKEND_AUTH_SECRET: temp
    ORGANIZATION_NAME: sig-Red-Hat-hts
